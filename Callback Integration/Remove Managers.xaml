<Activity mc:Ignorable="sap sap2010" x:Class="Add_Managers" this:Add_Managers.ManagersAsUserID="[New List(Of String)]" this:Add_Managers.NumberOfTries="1" this:Add_Managers.DomainURL="https://sundsvalltest.e-tjansteportalen.se/" this:Add_Managers.RequestTimeout="15000" this:Add_Managers.ManagerGroupNames="[New List(Of String)]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="CaseID" Type="InArgument(x:Int32)" />
    <x:Property Name="ExternalID" Type="InArgument(x:String)" />
    <x:Property Name="ExternalIDSystem" Type="InArgument(x:String)" />
    <x:Property Name="ManagersAsUserID" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="Username" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="Password" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="Success" Type="OutArgument(x:Boolean)" />
    <x:Property Name="StatusCode" Type="OutArgument(x:Int32)" />
    <x:Property Name="Headers" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="setManagersReturn" Type="OutArgument(x:Int32)" />
    <x:Property Name="NumberOfTries" Type="InArgument(x:Int32)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="DomainURL" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="RequestTimeout" Type="InArgument(x:Int32)" />
    <x:Property Name="ManagerGroupNames" Type="InArgument(scg:List(x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1189,1708</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Add_Managers_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="54">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="23">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Add_Managers" sap:VirtualizedContainerService.HintSize="621,1643" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="DTCases" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new list(of string)]" Name="UsersWithID" />
      <Variable x:TypeArguments="x:Int32" Name="UserIndex" />
      <Variable x:TypeArguments="x:Boolean" Name="ChangesMade" />
      <Variable x:TypeArguments="sd:DataTable" Name="DTManagerGroups" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="UserGroupsWithName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Get Managers workflow" sap:VirtualizedContainerService.HintSize="579,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Callback Integration\Get Managers.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="CaseID">[CaseID]</InArgument>
        <InArgument x:TypeArguments="ss:SecureString" x:Key="Password">[Password]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExternalID">[ExternalID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ExternalIDSystem">[ExternalIDSystem]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Username">[Username]</InArgument>
        <OutArgument x:TypeArguments="sxl:XDocument" x:Key="ResultXMLDocument" />
        <OutArgument x:TypeArguments="x:String" x:Key="ResultString" />
        <OutArgument x:TypeArguments="x:Int32" x:Key="StatusCode">[StatusCode]</OutArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Headers" />
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="ResultAsDataTable">[DTCases]</OutArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="Success">[Success]</OutArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="NumberOfTries">[NumberOfTries]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="DomainURL">[DomainURL]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="RequestTimeout">[RequestTimeout]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="ResultAsDataTableManagerGroups">[DTManagerGroups]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DTCases]" DisplayName="Private: For Each Row" sap:VirtualizedContainerService.HintSize="579,262" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <AddToCollection x:TypeArguments="x:String" Collection="[UsersWithID]" DisplayName="Private: Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[row.Item(&quot;userID&quot;).ToString.ToLower]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DTManagerGroups]" DisplayName="Private: For Each Row (Manager Groups)" sap:VirtualizedContainerService.HintSize="579,262" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <AddToCollection x:TypeArguments="x:String" Collection="[UserGroupsWithName]" DisplayName="Private: Add To Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[row.Item(&quot;name&quot;).ToString.ToLower]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="579,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign Lowecased List" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[UsersWithID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[UsersWithID.Select(function (x) x.ToLower).ToList()]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[UserIndex]" DisplayName="Private: For Each User ID To Remove" sap:VirtualizedContainerService.HintSize="579,200" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ManagersAsUserID]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="userID" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="UserExistOnCase" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ExistsInCollection x:TypeArguments="x:String" Collection="[UsersWithID]" DisplayName="Private: Exists In Collection" sap:VirtualizedContainerService.HintSize="683,22" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_1" Item="[userID.ToLower]" Result="[UserExistOnCase]" />
            <If Condition="[UserExistOnCase]" DisplayName="If UserID Exists in Collection" sap:VirtualizedContainerService.HintSize="683,372" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <RemoveFromCollection x:TypeArguments="x:String" Collection="[UsersWithID]" DisplayName="Private: Remove From Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[userID.ToLower]" />
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[ChangesMade]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message Not Found" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;User with index &quot; + UserIndex.ToString + &quot; in list argument not found on case &quot; + CaseID.ToString]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[UserIndex]" DisplayName="Private: For Each User Group To Remove" sap:VirtualizedContainerService.HintSize="579,200" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ManagerGroupNames]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="group" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="UserExistOnCase" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ExistsInCollection x:TypeArguments="x:String" Collection="[UserGroupsWithName]" DisplayName="Private: Exists In Collection" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_2" Item="[group.ToLower]" Result="[UserExistOnCase]" />
            <If Condition="[UserExistOnCase]" DisplayName="If UserID Exists in Collection" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <RemoveFromCollection x:TypeArguments="x:String" Collection="[UserGroupsWithName]" DisplayName="Private: Remove From Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_2" Item="[group.ToLower]" />
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[ChangesMade]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message Not Found" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;User with index &quot; + UserIndex.ToString + &quot; in list argument not found on case &quot; + CaseID.ToString]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[ChangesMade]" DisplayName="If Any Difference" sap:VirtualizedContainerService.HintSize="579,249" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Get Managers workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Callback Integration\Set Managers.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="CaseID">[CaseID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ExternalID">[ExternalID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ExternalIDSystem">[ExternalIDSystem]</InArgument>
              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="ManagerGroups">[UserGroupsWithName]</InArgument>
              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="ManagersAsUserID">[UsersWithID]</InArgument>
              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="ManagersAsName" />
              <InArgument x:TypeArguments="x:String" x:Key="Username">[Username]</InArgument>
              <InArgument x:TypeArguments="ss:SecureString" x:Key="Password">[Password]</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Success">[Success]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="StatusCode">[StatusCode]</OutArgument>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="Headers">[Headers]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="setManagersReturn">[setManagersReturn]</OutArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="NumberOfTries">[NumberOfTries]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="DomainURL">[DomainURL]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="RequestTimeout">[RequestTimeout]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:LogMessage DisplayName="Log Message Removed" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Managers has been removed on case &quot; + CaseID.ToString]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message Added" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;No changes found to managers on case, none removed&quot;]" />
      </If.Else>
    </If>
  </Sequence>
</Activity>