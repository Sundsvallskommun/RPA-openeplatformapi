<Activity mc:Ignorable="sap sap2010" x:Class="TEst" this:TEst.NumberOfTries="1" this:TEst.DomainURL="https://sundsvalltest.e-tjansteportalen.se/" this:TEst.RequestTimeout="15000" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="CaseID" Type="InArgument(x:Int32)" />
    <x:Property Name="ExternalID" Type="InArgument(x:String)" />
    <x:Property Name="ExternalIDSystem" Type="InArgument(x:String)" />
    <x:Property Name="ManagerGroups" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="ManagersAsUserID" Type="InArgument(scg:List(x:String))">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="ManagersAsName" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="Username" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="Password" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="Success" Type="OutArgument(x:Boolean)" />
    <x:Property Name="StatusCode" Type="OutArgument(x:Int32)" />
    <x:Property Name="Headers" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="setManagersReturn" Type="OutArgument(x:Int32)" />
    <x:Property Name="NumberOfTries" Type="InArgument(x:Int32)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="DomainURL" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="RequestTimeout" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1189,3406</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>SoapClient</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>SoapClient</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Sets managers from the lists of managers (from userID and/or names) on the case with the given ID or on the case with the given external ID and external system name. Give empty lists to remove all managers.&#xA;&#xA;Pre Condition: NA&#xA;Post Condition: NA" DisplayName="Set Managers" sap:VirtualizedContainerService.HintSize="640,3341" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="[&quot;&lt;Envelope xmlns=&quot;&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&quot;&gt;&lt;Body&gt;&lt;getManagersRequest xmlns=&quot;&quot;http://www.oeplatform.org/version/1.0/schemas/integration/callback&quot;&quot;&gt;&lt;flowInstanceID&gt;1631&lt;/flowInstanceID&gt;&lt;!-- Optional --&gt;&lt;externalID&gt;&lt;ID&gt;&lt;/ID&gt;&lt;System&gt;&lt;/System&gt;&lt;/externalID&gt;&lt;/getManagersRequest&gt;&lt;/Body&gt;&lt;/Envelope&gt;&quot;]" Name="Body" />
      <Variable x:TypeArguments="x:String" Default="text/xml" Name="contenttype" />
      <Variable x:TypeArguments="x:String" Name="PasswordString" />
      <Variable x:TypeArguments="x:String" Name="ManagerGroupsString" />
      <Variable x:TypeArguments="x:String" Name="ManagersString" />
      <Variable x:TypeArguments="sxl:XDocument" Name="ResultXMLDocument" />
      <Variable x:TypeArguments="sd:DataTable" Name="ResultAsDataTable" />
      <Variable x:TypeArguments="x:String" Name="ResultString" />
      <Variable x:TypeArguments="x:Object" Name="setManagersReturnObject" />
      <Variable x:TypeArguments="x:Int32" Name="UserIDIndex" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[NumberOfTries = 0]" DisplayName="If No Retries" sap:VirtualizedContainerService.HintSize="598,51" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw SE" Exception="[new SystemException(&quot;Number of retries needs tro be 1 or more&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
    </If>
    <Assign DisplayName="Assign Domain URL" sap:VirtualizedContainerService.HintSize="598,60" sap2010:WorkflowViewState.IdRef="Assign_22">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[DomainURL]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[if(DomainURL.ToLower.Contains("api/callback"),DomainURL,if(DomainURL.Substring(DomainURL.Length-1) = "/", DomainURL + "api/callback", DomainURL+"/api/callback"))]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Not ManagersAsUserID Is Nothing]" DisplayName="If Managers As User IDs Is NOT Empty" sap:VirtualizedContainerService.HintSize="598,960" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[UserIDIndex]" DisplayName="For Each UserID" sap:VirtualizedContainerService.HintSize="562,773" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[ManagersAsUserID]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="userID" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="526,639" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Concat Managers String" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ManagersString]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[ManagersString + "&lt;managers&gt;"]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[ManagersAsName isnot Nothing]" sap:VirtualizedContainerService.HintSize="484,247" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <If Condition="[ManagersAsName.Count - 1 &gt; UserIDIndex]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign DisplayName="Concat Managers String" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ManagersString]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ManagersString + "&lt;name&gt;" + ManagersAsName(UserIDIndex) + "&lt;/name&gt;"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                  </If.Then>
                </If>
                <Assign DisplayName="Concat Managers String" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ManagersString]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[ManagersString + "&lt;name&gt;&lt;/name&gt;&lt;userID&gt;" + userID + "&lt;/userID&gt;"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Concat Managers String" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ManagersString]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[ManagersString + "&lt;/managers&gt;"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Then>
    </If>
    <If Condition="[Not ManagerGroups Is Nothing]" DisplayName="If Manager Groups Is NOT Empty" sap:VirtualizedContainerService.HintSize="598,381" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Manager Group" sap:VirtualizedContainerService.HintSize="307,194" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ManagerGroups]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="group" />
              </ActivityAction.Argument>
              <Assign DisplayName="Concat Manager Groups String" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ManagerGroupsString]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[ManagerGroupsString + "&lt;managerGroups&gt;&lt;name&gt;" + group + "&lt;/name&gt;&lt;/managerGroups&gt;"]</InArgument>
                </Assign.Value>
              </Assign>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Then>
    </If>
    <ui:LogMessage DisplayName="Log Message Setting" sap:VirtualizedContainerService.HintSize="598,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Setting &quot; + if(Not ManagersAsUserID is Nothing, &quot;individual&quot;,&quot;&quot;) + &quot; manager/s&quot; + if(ManagerGroups Is Nothing,&quot;&quot;,&quot; from group/s &quot; + String.Join(&quot;, &quot;,ManagerGroups)) + &quot; on case with &quot; + if(String.IsNullOrEmpty(ExternalID) AND String.IsNullOrEmpty(ExternalID), &quot;ID &quot; + CaseID.ToString, &quot;external ID &quot; + ExternalID + &quot; from &quot; + ExternalIDSystem + &quot; system&quot;)]" />
    <Assign DisplayName="Assign SOAP Body" sap:VirtualizedContainerService.HintSize="598,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Body]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["&lt;Envelope xmlns=""http://schemas.xmlsoap.org/soap/envelope/""&gt;&lt;Body&gt;&lt;setManagers xmlns=""http://www.oeplatform.org/version/1.0/schemas/integration/callback""&gt;&lt;flowInstanceID&gt;" + CaseID.ToString + "&lt;/flowInstanceID&gt;&lt;!--Optional--&gt;&lt;externalID&gt;&lt;ID&gt;" + ExternalID + "&lt;/ID&gt;&lt;System&gt;" + ExternalIDSystem + "&lt;/System&gt;&lt;/externalID&gt;&lt;!--Optional--&gt;" + ManagersString + "&lt;!--Optional--&gt;" + ManagerGroupsString + "&lt;/setManagers&gt;&lt;/Body&gt;&lt;/Envelope&gt;"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign PasswordString" sap:VirtualizedContainerService.HintSize="598,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[PasswordString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, Password).Password]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Empty DataTable" sap:VirtualizedContainerService.HintSize="598,60" sap2010:WorkflowViewState.IdRef="Assign_20">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[ResultAsDataTable]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch SOAP Call" sap:VirtualizedContainerService.HintSize="598,1119" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="418,892" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Object" Name="CherryPickObject" />
            <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="CherryPick" />
            <Variable x:TypeArguments="x:String" Name="CherryPickText" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,240" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[NumberOfTries]" RetryInterval="00:00:05">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" AcceptFormat="ANY" Body="[Body]" BodyFormat="&quot;application/xml&quot;" DisplayName="Private: SOAP Call Thru HTTP Request" EndPoint="[DomainURL]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Password="[PasswordString]" ResponseHeaders="[Headers]" Result="[ResultString]" StatusCode="[StatusCode]" TimeoutMS="[RequestTimeout]" Username="[Username]">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Cookies>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Cookies>
                  <ui:HttpClient.Headers>
                    <InArgument x:TypeArguments="x:String" x:Key="content-type">[contenttype]</InArgument>
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <ui:IsMatch DisplayName="Success Status Code" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[StatusCode.ToString]" IsBuilderTabModified="False" Pattern="(200)" RegexOption="IgnoreCase, Compiled" />
              </ActivityFunc>
            </ui:RetryScope.Condition>
          </ui:RetryScope>
          <Assign DisplayName="Assign Found Cases" sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[Success]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
          <ui:DeserializeXml DisplayName="Private: Deserialize XML" sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="DeserializeXml_3" XMLDocument="[ResultXMLDocument]" XMLString="[ResultString]" />
          <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Get Event ID" ExistingXML="[ResultXMLDocument]" sap:VirtualizedContainerService.HintSize="376,89" sap2010:WorkflowViewState.IdRef="ExecuteXPath_5" Result="[setManagersReturnObject]" XPathExpression="string(//*[local-name()='setManagersReturn'])" />
          <Assign DisplayName="Assign Outgoing Event ID" sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_19">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[setManagersReturn]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[int32.Parse(setManagersReturnObject.ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message Set" sap:VirtualizedContainerService.HintSize="376,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[If(ManagersAsUserID.Count &gt; 0, &quot;Individual m&quot;,&quot;M&quot;) + &quot;anager/s has been set (with return ID &quot; + setManagersReturn.ToString + &quot;) &quot; + If(ManagerGroups Is Nothing,&quot;&quot;,&quot; from group/s &quot; + String.Join(&quot;, &quot;,ManagerGroups)) + &quot; on case with &quot; + If(String.IsNullOrEmpty(ExternalID) And String.IsNullOrEmpty(ExternalID), &quot;ID &quot; + CaseID.ToString, &quot;external ID &quot; + ExternalID + &quot; from &quot; + ExternalIDSystem + &quot; system&quot;)]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="422,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <TryCatch DisplayName="Try Catch Return Error" sap:VirtualizedContainerService.HintSize="438,639" sap2010:WorkflowViewState.IdRef="TryCatch_2">
              <TryCatch.Try>
                <Sequence DisplayName="Get Error And Log" sap:VirtualizedContainerService.HintSize="376,412" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Object" Name="ErrorDescription" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:DeserializeXml DisplayName="Private: Deserialize XML" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeXml_2" XMLDocument="[ResultXMLDocument]" XMLString="[ResultString]" />
                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[ResultXMLDocument]" sap:VirtualizedContainerService.HintSize="334,89" sap2010:WorkflowViewState.IdRef="ExecuteXPath_1" Result="[ErrorDescription]" XPathExpression="string(//*[local-name()='faultstring'])" />
                  <ui:LogMessage DisplayName="Log Message Error With Description" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;SOAP call to &quot; + DomainURL + &quot; unsuccessful with code &quot;+ StatusCode.ToString + &quot; and description: &quot; + ErrorDescription.ToString]" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log Message Error With String" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;SOAP call to &quot; + DomainURL + &quot; unsuccessful with code &quot;+ StatusCode.ToString + &quot; and returned string: &quot; + ResultString]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>